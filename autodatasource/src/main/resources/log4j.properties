log4j.rootLogger=DEBUG,ERROR,consoleAppender,logfile

# ConsoleAppender 输出
log4j.appender.consoleAppender=org.apache.log4j.ConsoleAppender
log4j.appender.consoleAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.consoleAppender.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%l]-[%p] %m%n

#文件输出：RollingFileAppender
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#保存log文件路径
log4j.appender.logfile.File=${catalina.home}\\logs\\insoft-log.txt
# 默认为true，添加到末尾，false在每次启动时进行覆盖
log4j.appender.logfile.Append = true
# 一个log文件的大小，超过这个大小就又会生成1个日志 # KB ，MB，GB
log4j.appender.logfile.MaxFileSize = 10MB
log4j.appender.logfile.ImmediateFlush=false
# 最多保存20个文件备份
log4j.appender.logfile.MaxBackupIndex = 20
# 输出文件的格式
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} [%t] [%c] [%p] - %m%n

# Druid
log4j.logger.druid.sql=ERROR,consoleAppender,logfile,DEBUG
log4j.logger.druid.sql.DataSource=INFO,DEBUG,consoleAppender,logfile
log4j.logger.druid.sql.Connection=INFO,DEBUG,consoleAppender,logfile
log4j.logger.druid.sql.Statement=INFO,DEBUG,consoleAppender,logfile
log4j.logger.druid.sql.ResultSet=INFO,DEBUG,consoleAppender,logfile